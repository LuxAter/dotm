name: dotm
help: Personal dotfiles manager utility
version: 0.1.0

environment_variables:
  - name: DOTFILES
    required: true
    default: $HOME/dotfiles.new
    help: Path to the local dotfiles repository

commands:
  - name: completions
    short: C
    help: Generate bash autocompletions

  - name: update
    short: U
    help: Update and install the dotm script
    dependencies:
      - curl

    flags:
      - long: --force
        short: -f
        conflicts: [--check]
        help: Automatically accept all user prompts
      - long: --check
        short: -c
        conflicts: [--force,--no-completion,--no-dotm]
        help: Only check for updates, don't actually update
      - long: --no-completion
        short: -C
        conflicts: [--check]
        help: Don't update the bash completions
      - long: --no-dotm
        short: -D
        conflicts: [--check]
        help: Don't update the dotm script
      - long: --url
        short: -U
        arg: URL
        default: https://raw.githubusercontent.com/LuxAter/dotm/main
        help: Base url to download the scripts from
      - long: --path
        short: -p
        arg: PATH
        validate: dir_exists
        help: Path of the dotm installation to update

  - name: add
    short: a
    group: Dotfile
    help: Add new files/directories to a dotfile package

    args:
      - name: files
        required: true
        repeatable: true
        help: List of files or directories to add into the dotfiles

    flags:
      - long: --force
        short: -f
        help: Automatically accept all user prompts
      - long: --package
        short: -p
        arg: PACKAGE
        default: host/$HOSTNAME
        help: Package to add the new dotfiles into
      - long: --encrypt
        short: -e
        help: Encrypt the dotfile in the repository
      - long: --copy
        short: -c
        help: Copy the dotfile instead of using symlinks
      - long: --archive
        short: -a
        help: Archive the dotfile in the repository

  - name: install
    short: i
    help: Copy dotfiles directly into system paths

    args:
      - name: packages
        repeatable: true
        default: host/$HOSTNAME
        help: List of dotfile packages to install into the system

    flags:
      - long: --force
        short: -f
        help: Automatically accept all user prompts

  - name: list
    short: l
    help: List the state of all the currently configured dotfiles

    args:
      - name: packages
        repeatable: true
        default: host/$HOSTNAME
        help: List of dotfile packages to include in the list

    flags:
      - long: --all
        short: -a
        help: Include all dotfiles in the list
      - long: --raw
        short: -r
        help: Display a raw list without styling, useful in scripts

  - name: remove
    short: r
    help: Remove file from a dotfile package

    args:
      - name: files
        required: true
        repeatable: true
        help: List of files or directories to be removed from the dotfiles

    flags:
      - long: --force
        short: -f
        help: Automatically accept all user prompts
      - long: --package
        short: -p
        arg: PACKAGE
        default: host/$HOSTNAME
        help: Package to remove the dotfiles from

  - name: set
    short: s
    help: Create links from system files into the dotfiles

    args:
      - name: packages
        repeatable: true
        default: host/$HOSTNAME
        help: List of dotfile packages to create the links for

    flags:
      - long: --force
        short: -f
        help: Automatically accept all user prompts

  - name: unset
    short: u
    help: Remove links from system files into the dotfiles

    args:
      - name: packages
        repeatable: true
        default: host/$HOSTNAME
        help: List of dotfile packages to remove the links of

    flags:
      - long: --force
        short: -f
        help: Automatically accept all user prompts

  - name: pull
    group: Git
    help: Pull changes from the remote git repo

  - name: push
    help: Push local changes to the remote git repo

    flags:
      - long: --message
        short: -m
        arg: MESSAGE
        default: $(date +"%Y-%m-%d %H:%M:%S")
        help: Set the commit message for the local changes

  - name: sync
    help: Sync any changes with the remote git repo

    flags:
      - long: --max-frequnecy
        short: -f
        arg: DURATION
        help: Set a duration in seconds for how long to wait since the last sync before doing it again
      - long: --message
        short: -m
        arg: MESSAGE
        default: $(date +"%Y-%m-%d %H:%M:%S")
        help: Set the commit message for the local changes
